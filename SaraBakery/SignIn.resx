<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FAJAAAiAQgAIAAFQCAABIAAKASAABEAhAASAACgEgAAQAIUAEAACoBAAAkAAFAJAAAiAQgAIAAFQCAAB
        IAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAABIAAEAAC
        QAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAABIAAE
        gAAQAAJAAAgAASAABIAAEACFABAAAqAQAAJAABQCQAAIgEIACAABUAgAASAACgEgAARAIQAEgAAoBIAA
        EACFABAAAqAQAAJAABQCQAAIgEIACAABUAgAASAACgEgAARAIQAEgAAoBIAAEAACQAAIAAEgAASAANIm
        gAoEkF4B9BX+KxwXGuyids7SY3UvFjVGZHHR8ZoZi45VTbFv+36mzWmoW7DyeNR2FKw+Xv3CPHvbIJht
        mG1FbYe00bTV1nZIX5s+N30frR1mn9ncF2bMfSxku1kA/wdzfjOPjVK7ywAAAABJRU5ErkJggg==
</value>
  </data>
</root>